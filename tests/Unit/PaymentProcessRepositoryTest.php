<?php

namespace Tests\Unit;


use App\BaseRepo\PaymentProcess\PaymentProcessRepository;
use App\Models\Order;
use App\Models\PaymentProcess;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PaymentProcessRepositoryTest extends TestCase
{
    use RefreshDatabase;

    protected $paymentProcess;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->paymentProcess = new PaymentProcessRepository(new PaymentProcess());
    }

    public function test_list()
    {
        $this->assertInstanceOf(Collection::class, $this->paymentProcess->all());
    }

    public function test_delete()
    {
        Order::factory(1)->create();
        PaymentProcess::factory(1)->create();
        $this->assertEquals(true, $this->paymentProcess->delete(1));
    }

    public function test_find()
    {
        Order::factory(1)->create();
        PaymentProcess::factory(1)->create();
        $this->assertInstanceOf(PaymentProcess::class, $this->paymentProcess->find(1));
    }

    public function test_find_exception()
    {
        $this->expectException(ModelNotFoundException::class);
        $this->paymentProcess->find(1000);
    }

    public function test_create()
    {
        Order::factory(1)->create();
        $paymentProcess = [
            'order_id' => 1,
            'request_id' => 'test',
            'process_url' => 'test',
            'reference' => 'test'
        ];
        $this->assertInstanceOf(PaymentProcess::class, $this->paymentProcess->create($paymentProcess));
    }

    public function test_update()
    {
        Order::factory(1)->create();
        PaymentProcess::factory(1)->create();
        $paymentProcess = $this->paymentProcess->find(1)->toArray();
        unset($paymentProcess['order']);
        $this->assertEquals(true, $this->paymentProcess->update($paymentProcess, 1));
    }
}
